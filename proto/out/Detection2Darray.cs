// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: modules/lgsvl/proto/detection2darray.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Apollo.Common {

  /// <summary>Holder for reflection information generated from modules/lgsvl/proto/detection2darray.proto</summary>
  public static partial class Detection2DarrayReflection {

    #region Descriptor
    /// <summary>File descriptor for modules/lgsvl/proto/detection2darray.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static Detection2DarrayReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ciptb2R1bGVzL2xnc3ZsL3Byb3RvL2RldGVjdGlvbjJkYXJyYXkucHJvdG8S",
            "DWFwb2xsby5jb21tb24aIW1vZHVsZXMvY29tbW9uL3Byb3RvL2hlYWRlci5w",
            "cm90bxolbW9kdWxlcy9sZ3N2bC9wcm90by9kZXRlY3Rpb24yZC5wcm90byJp",
            "ChBEZXRlY3Rpb24yREFycmF5EiUKBmhlYWRlchgBIAEoCzIVLmFwb2xsby5j",
            "b21tb24uSGVhZGVyEi4KCmRldGVjdGlvbnMYAiADKAsyGi5hcG9sbG8uY29t",
            "bW9uLkRldGVjdGlvbjJEYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Apollo.Common.HeaderReflection.Descriptor, global::Apollo.Common.Detection2DReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Apollo.Common.Detection2DArray), global::Apollo.Common.Detection2DArray.Parser, new[]{ "Header", "Detections" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class Detection2DArray : pb::IMessage<Detection2DArray> {
    private static readonly pb::MessageParser<Detection2DArray> _parser = new pb::MessageParser<Detection2DArray>(() => new Detection2DArray());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Detection2DArray> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Apollo.Common.Detection2DarrayReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Detection2DArray() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Detection2DArray(Detection2DArray other) : this() {
      Header = other.header_ != null ? other.Header.Clone() : null;
      detections_ = other.detections_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Detection2DArray Clone() {
      return new Detection2DArray(this);
    }

    /// <summary>Field number for the "header" field.</summary>
    public const int HeaderFieldNumber = 1;
    private global::Apollo.Common.Header header_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Common.Header Header {
      get { return header_; }
      set {
        header_ = value;
      }
    }

    /// <summary>Field number for the "detections" field.</summary>
    public const int DetectionsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Apollo.Common.Detection2D> _repeated_detections_codec
        = pb::FieldCodec.ForMessage(18, global::Apollo.Common.Detection2D.Parser);
    private readonly pbc::RepeatedField<global::Apollo.Common.Detection2D> detections_ = new pbc::RepeatedField<global::Apollo.Common.Detection2D>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Apollo.Common.Detection2D> Detections {
      get { return detections_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Detection2DArray);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Detection2DArray other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Header, other.Header)) return false;
      if(!detections_.Equals(other.detections_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (header_ != null) hash ^= Header.GetHashCode();
      hash ^= detections_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (header_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Header);
      }
      detections_.WriteTo(output, _repeated_detections_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (header_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Header);
      }
      size += detections_.CalculateSize(_repeated_detections_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Detection2DArray other) {
      if (other == null) {
        return;
      }
      if (other.header_ != null) {
        if (header_ == null) {
          header_ = new global::Apollo.Common.Header();
        }
        Header.MergeFrom(other.Header);
      }
      detections_.Add(other.detections_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (header_ == null) {
              header_ = new global::Apollo.Common.Header();
            }
            input.ReadMessage(header_);
            break;
          }
          case 18: {
            detections_.AddEntriesFrom(input, _repeated_detections_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
