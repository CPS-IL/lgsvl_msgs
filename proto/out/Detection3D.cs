// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: modules/lgsvl/proto/detection3d.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Apollo.Common {

  /// <summary>Holder for reflection information generated from modules/lgsvl/proto/detection3d.proto</summary>
  public static partial class Detection3DReflection {

    #region Descriptor
    /// <summary>File descriptor for modules/lgsvl/proto/detection3d.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static Detection3DReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiVtb2R1bGVzL2xnc3ZsL3Byb3RvL2RldGVjdGlvbjNkLnByb3RvEg1hcG9s",
            "bG8uY29tbW9uGiFtb2R1bGVzL2NvbW1vbi9wcm90by9oZWFkZXIucHJvdG8a",
            "I21vZHVsZXMvY29tbW9uL3Byb3RvL2dlb21ldHJ5LnByb3RvGiVtb2R1bGVz",
            "L2xnc3ZsL3Byb3RvL2RldGVjdGlvbjJkLnByb3RvImAKBFBvc2USKAoIcG9z",
            "aXRpb24YASABKAsyFi5hcG9sbG8uY29tbW9uLlBvaW50M0QSLgoLb3JpZW50",
            "YXRpb24YAiABKAsyGS5hcG9sbG8uY29tbW9uLlF1YXRlcm5pb24iXAoNQm91",
            "bmRpbmdCb3gzRBIlCghwb3NpdGlvbhgBIAEoCzITLmFwb2xsby5jb21tb24u",
            "UG9zZRIkCgRzaXplGAIgASgLMhYuYXBvbGxvLmNvbW1vbi5WZWN0b3IzIrIB",
            "CgtEZXRlY3Rpb24zRBIlCgZoZWFkZXIYASABKAsyFS5hcG9sbG8uY29tbW9u",
            "LkhlYWRlchIKCgJpZBgCIAEoDRINCgVsYWJlbBgDIAEoCRINCgVzY29yZRgE",
            "IAEoARIqCgRiYm94GAUgASgLMhwuYXBvbGxvLmNvbW1vbi5Cb3VuZGluZ0Jv",
            "eDNEEiYKCHZlbG9jaXR5GAYgASgLMhQuYXBvbGxvLmNvbW1vbi5Ud2lzdGIG",
            "cHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Apollo.Common.HeaderReflection.Descriptor, global::Apollo.Common.GeometryReflection.Descriptor, global::Apollo.Common.Detection2DReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Apollo.Common.Pose), global::Apollo.Common.Pose.Parser, new[]{ "Position", "Orientation" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Apollo.Common.BoundingBox3D), global::Apollo.Common.BoundingBox3D.Parser, new[]{ "Position", "Size" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Apollo.Common.Detection3D), global::Apollo.Common.Detection3D.Parser, new[]{ "Header", "Id", "Label", "Score", "Bbox", "Velocity" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class Pose : pb::IMessage<Pose> {
    private static readonly pb::MessageParser<Pose> _parser = new pb::MessageParser<Pose>(() => new Pose());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Pose> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Apollo.Common.Detection3DReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Pose() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Pose(Pose other) : this() {
      Position = other.position_ != null ? other.Position.Clone() : null;
      Orientation = other.orientation_ != null ? other.Orientation.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Pose Clone() {
      return new Pose(this);
    }

    /// <summary>Field number for the "position" field.</summary>
    public const int PositionFieldNumber = 1;
    private global::Apollo.Common.Point3D position_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Common.Point3D Position {
      get { return position_; }
      set {
        position_ = value;
      }
    }

    /// <summary>Field number for the "orientation" field.</summary>
    public const int OrientationFieldNumber = 2;
    private global::Apollo.Common.Quaternion orientation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Common.Quaternion Orientation {
      get { return orientation_; }
      set {
        orientation_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Pose);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Pose other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Position, other.Position)) return false;
      if (!object.Equals(Orientation, other.Orientation)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (position_ != null) hash ^= Position.GetHashCode();
      if (orientation_ != null) hash ^= Orientation.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (position_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Position);
      }
      if (orientation_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Orientation);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (position_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Position);
      }
      if (orientation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Orientation);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Pose other) {
      if (other == null) {
        return;
      }
      if (other.position_ != null) {
        if (position_ == null) {
          position_ = new global::Apollo.Common.Point3D();
        }
        Position.MergeFrom(other.Position);
      }
      if (other.orientation_ != null) {
        if (orientation_ == null) {
          orientation_ = new global::Apollo.Common.Quaternion();
        }
        Orientation.MergeFrom(other.Orientation);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (position_ == null) {
              position_ = new global::Apollo.Common.Point3D();
            }
            input.ReadMessage(position_);
            break;
          }
          case 18: {
            if (orientation_ == null) {
              orientation_ = new global::Apollo.Common.Quaternion();
            }
            input.ReadMessage(orientation_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class BoundingBox3D : pb::IMessage<BoundingBox3D> {
    private static readonly pb::MessageParser<BoundingBox3D> _parser = new pb::MessageParser<BoundingBox3D>(() => new BoundingBox3D());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BoundingBox3D> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Apollo.Common.Detection3DReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BoundingBox3D() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BoundingBox3D(BoundingBox3D other) : this() {
      Position = other.position_ != null ? other.Position.Clone() : null;
      Size = other.size_ != null ? other.Size.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BoundingBox3D Clone() {
      return new BoundingBox3D(this);
    }

    /// <summary>Field number for the "position" field.</summary>
    public const int PositionFieldNumber = 1;
    private global::Apollo.Common.Pose position_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Common.Pose Position {
      get { return position_; }
      set {
        position_ = value;
      }
    }

    /// <summary>Field number for the "size" field.</summary>
    public const int SizeFieldNumber = 2;
    private global::Apollo.Common.Vector3 size_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Common.Vector3 Size {
      get { return size_; }
      set {
        size_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BoundingBox3D);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BoundingBox3D other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Position, other.Position)) return false;
      if (!object.Equals(Size, other.Size)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (position_ != null) hash ^= Position.GetHashCode();
      if (size_ != null) hash ^= Size.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (position_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Position);
      }
      if (size_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Size);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (position_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Position);
      }
      if (size_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Size);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BoundingBox3D other) {
      if (other == null) {
        return;
      }
      if (other.position_ != null) {
        if (position_ == null) {
          position_ = new global::Apollo.Common.Pose();
        }
        Position.MergeFrom(other.Position);
      }
      if (other.size_ != null) {
        if (size_ == null) {
          size_ = new global::Apollo.Common.Vector3();
        }
        Size.MergeFrom(other.Size);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (position_ == null) {
              position_ = new global::Apollo.Common.Pose();
            }
            input.ReadMessage(position_);
            break;
          }
          case 18: {
            if (size_ == null) {
              size_ = new global::Apollo.Common.Vector3();
            }
            input.ReadMessage(size_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Detection3D : pb::IMessage<Detection3D> {
    private static readonly pb::MessageParser<Detection3D> _parser = new pb::MessageParser<Detection3D>(() => new Detection3D());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Detection3D> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Apollo.Common.Detection3DReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Detection3D() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Detection3D(Detection3D other) : this() {
      Header = other.header_ != null ? other.Header.Clone() : null;
      id_ = other.id_;
      label_ = other.label_;
      score_ = other.score_;
      Bbox = other.bbox_ != null ? other.Bbox.Clone() : null;
      Velocity = other.velocity_ != null ? other.Velocity.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Detection3D Clone() {
      return new Detection3D(this);
    }

    /// <summary>Field number for the "header" field.</summary>
    public const int HeaderFieldNumber = 1;
    private global::Apollo.Common.Header header_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Common.Header Header {
      get { return header_; }
      set {
        header_ = value;
      }
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 2;
    private uint id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "label" field.</summary>
    public const int LabelFieldNumber = 3;
    private string label_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Label {
      get { return label_; }
      set {
        label_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "score" field.</summary>
    public const int ScoreFieldNumber = 4;
    private double score_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Score {
      get { return score_; }
      set {
        score_ = value;
      }
    }

    /// <summary>Field number for the "bbox" field.</summary>
    public const int BboxFieldNumber = 5;
    private global::Apollo.Common.BoundingBox3D bbox_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Common.BoundingBox3D Bbox {
      get { return bbox_; }
      set {
        bbox_ = value;
      }
    }

    /// <summary>Field number for the "velocity" field.</summary>
    public const int VelocityFieldNumber = 6;
    private global::Apollo.Common.Twist velocity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Common.Twist Velocity {
      get { return velocity_; }
      set {
        velocity_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Detection3D);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Detection3D other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Header, other.Header)) return false;
      if (Id != other.Id) return false;
      if (Label != other.Label) return false;
      if (Score != other.Score) return false;
      if (!object.Equals(Bbox, other.Bbox)) return false;
      if (!object.Equals(Velocity, other.Velocity)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (header_ != null) hash ^= Header.GetHashCode();
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Label.Length != 0) hash ^= Label.GetHashCode();
      if (Score != 0D) hash ^= Score.GetHashCode();
      if (bbox_ != null) hash ^= Bbox.GetHashCode();
      if (velocity_ != null) hash ^= Velocity.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (header_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Header);
      }
      if (Id != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Id);
      }
      if (Label.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Label);
      }
      if (Score != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(Score);
      }
      if (bbox_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Bbox);
      }
      if (velocity_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Velocity);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (header_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Header);
      }
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Id);
      }
      if (Label.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Label);
      }
      if (Score != 0D) {
        size += 1 + 8;
      }
      if (bbox_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Bbox);
      }
      if (velocity_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Velocity);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Detection3D other) {
      if (other == null) {
        return;
      }
      if (other.header_ != null) {
        if (header_ == null) {
          header_ = new global::Apollo.Common.Header();
        }
        Header.MergeFrom(other.Header);
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Label.Length != 0) {
        Label = other.Label;
      }
      if (other.Score != 0D) {
        Score = other.Score;
      }
      if (other.bbox_ != null) {
        if (bbox_ == null) {
          bbox_ = new global::Apollo.Common.BoundingBox3D();
        }
        Bbox.MergeFrom(other.Bbox);
      }
      if (other.velocity_ != null) {
        if (velocity_ == null) {
          velocity_ = new global::Apollo.Common.Twist();
        }
        Velocity.MergeFrom(other.Velocity);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (header_ == null) {
              header_ = new global::Apollo.Common.Header();
            }
            input.ReadMessage(header_);
            break;
          }
          case 16: {
            Id = input.ReadUInt32();
            break;
          }
          case 26: {
            Label = input.ReadString();
            break;
          }
          case 33: {
            Score = input.ReadDouble();
            break;
          }
          case 42: {
            if (bbox_ == null) {
              bbox_ = new global::Apollo.Common.BoundingBox3D();
            }
            input.ReadMessage(bbox_);
            break;
          }
          case 50: {
            if (velocity_ == null) {
              velocity_ = new global::Apollo.Common.Twist();
            }
            input.ReadMessage(velocity_);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
